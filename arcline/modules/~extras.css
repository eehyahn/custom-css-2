





.tab-audio-button {
  display: none !important;
}


  #navigator-toolbox:not([animate='true']) #titlebar {
     
        &::before {
       
          background: transparent !important;
      
          
     
         
    }}








/*-----------------------new tab button in sidebar-------------------------------------*/



 
    
    
    
    
    
    
    @media (prefers-color-scheme: dark) {


#tabbrowser-arrowscrollbox[orient="vertical"] #tabbrowser-arrowscrollbox-periphery > #tabs-newtab-button,
#vertical-tabs-newtab-button {
  appearance: none;
  border-radius: 12px !important;
  height: 0.5rem !important;
 min-height: 38px !important;
  line-height: var(--tab-label-line-height);
  border-radius: var(--border-radius-medium);
  padding-left: 9px !important;
  width: var(--tab-collapsed-background-width);
  margin-inline: 0px !important;

  #tabbrowser-tabs[orient="vertical"]:not([expanded]) & > .toolbarbutton-text {
    display: flex;
   
  }

  &:hover {
    border-radius: 12px !important;
    height: 8px !important;
    background-color: var(--tab-hover-background-color);
    outline-color: var(--tab-hover-outline-color);
  }

  &:focus-visible {
    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-inset);
  }

  > .toolbarbutton-text {
    text-align: start;
    margin-left: 5px !important;
    padding-inline-start: var(--tab-icon-end-margin);
  }
}

    }
    
    
    
    
    
    
    
    
    
    
/*------------------------------------------------------------------------------------------------------------------------------------*/
 

@media  (-moz-pref("arcline.media.player", 1)) {

* {
  
     --media-control-bg: light-dark(rgba(255, 255, 255, var(--media-default-filter_opacity)), rgba(0, 0, 0, var(--media-default-filter_opacity))) !important;
  
}

/* ========================================================================= */
/*  Zen Media Cover Art Styling (v7 - Isolated Clipping Container Method)    */
/* ========================================================================= */

/* 
  Make the toolbar item a positioning context for its pseudo-elements.
  We will also make its background slightly more transparent to let the
  artwork's color blend through nicely.
*/
#zen-media-controls-toolbar > toolbaritem {
 
  isolation: isolate !important;
 
}

/* 
  STEP 1: Create the Clipping Frame.
  This pseudo-element's ONLY job is to clip its child (`::after`).
  It's an invisible frame that sits behind the buttons.
*/
#zen-media-controls-toolbar > toolbaritem::before {
  content: "";
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  z-index: -1; /* Sits behind the buttons, but on top of ::after */
  border-radius: 12px !important;
  /* The key: This clips the artwork, but does NOT affect the music notes */
border: 1px solid rgba(128, 128, 128, var(--media-border-filter_opacity));
  outline: 1px solid rgba(10, 10, 10, 1) !important;
  /* Match the theme's corner rounding */
  border-radius: 12px;
}

/* 
  STEP 2: The Artwork.
  This is positioned relative to the clipping frame (`::before`).
  We make it oversized to contain the blur spill.
*/
#zen-media-controls-toolbar > toolbaritem::after {
  content: "";
  position: absolute;
  z-index: -2; /* Sits behind everything, at the very back */
  
  /* Make it larger than the frame to hide blur edges */
  top: 0px; left: 0px; right: 0px; bottom: 0px;
  
  background-image: var(--zen-cover-art-url);
  background-size: cover;
  background-position: center;
   clip-path: inset(0 round 12px);
  opacity: 0;
  transition: opacity 0.5s ease-in-out;

  /* --- YOUR CONFIGURATION --- */
  filter: 
    blur(var(--art-work-filter_blur))
    brightness(var(--art-work-filter_brightness))
    saturate(var(--art-work-filter_saturate))
    contrast(var(--art-work-filter_contrast))
    opacity(var(--art-work-filter_opacity));
  
 
}

/* This rule activates the artwork when the JS provides a URL */
#zen-media-controls-toolbar > toolbaritem[style*="--zen-cover-art-url"]::after {
  opacity: 1;
}




/* Base style: pseudo background under TabsToolbar */
#TabsToolbar::before {
  content: "";
  position: absolute !important;
  z-index: -1 !important;
  align-self: center !important;
  justify-self: center !important;

  /* Neo Zen dark background color */
  background: light-dark(rgba(220, 220, 220, 1), rgba(10, 10, 10, 1)) !important;
border-radius: 13px !important;
  width: 97%;
  height: 112px;
  bottom: 36px; /* Simulates var(--zen-toolbox-padding) */
  left: auto;
  right: auto;
  top: auto;

  border-radius: 12px; /* Matches Neo-Border-Radius */
  opacity: 0;
  visibility: visible !important;

  transition: bottom 0.3s ease 100ms, height 0.8s ease, opacity 0.3s ease;
}


:root:not([zen-compact-mode="true"]) #navigator-toolbox:has(#zen-media-controls-toolbar:hover) #TabsToolbar::before {
  opacity: 1 !important;
}

/* Compact layout (two-toolbar mode active) */
:root:not([zen-single-toolbar="true"])[zen-compact-mode="true"] #navigator-toolbox:has(#zen-media-controls-toolbar:hover) #TabsToolbar::before {
  opacity: 1 !important;
}








#zen-media-controls-toolbar toolbaritem {
  border-radius: 12px !important; 
margin-bottom: -8px !important;
  background-color: var(--media-control-bg) !important;
backdrop-filter: saturate(1) contrast(1) blur(var(--media-player-filter_blur)) !important;
}
#zen-media-info-vbox {
 
 
  &::before {
    
    background: transparent !important;
   
 
  }}



}


#zen-media-controls-toolbar toolbaritem {
  border-radius: 12px !important; 
margin-bottom: -8px !important;

}
/*------------------------------------------------------------------------------------------------------------------------------------*/
     





@media not (-moz-pref("arcline.pinned.extensions", 1)) {
  

 #tabbrowser-tabs {
   
    min-height: calc(100% + 4px) !important;
  }
}









.tab-text{
  width: 98% !important;
  overflow: hidden;
  display: inline-block;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 1 !important;
  
   filter:  brightness(100%)  !important;
  
}












/*-------------------------------------------------------------------------------------------------------*/

/* === SVG Separator Line === */
.vertical-pinned-tabs-container-separator {
    background: none !important; /* Remove original background line */
    height: 16px !important; /* Set fixed height */
    max-height: none !important; /* Remove max-height restriction */
    display: flex !important; /* Use flexbox to center SVG */
    flex-direction: row !important; /* Arrange items horizontally */
    align-items: center !important; /* Vertically center items */
    justify-content: flex-end !important; /* Align items to the right */
    overflow: hidden !important; /* Hide overflow during animation */
    border: none !important; /* Ensure no border is applied by default */
    width: 100% !important;; /* Ensure separator takes full available width */
    box-sizing: border-box !important; /* Include padding in width */
    gap: 0; /* Set initial gap to 0 */
    margin: 5px 0 5px 0 !important;
  }
  
  
  
  .vertical-pinned-tabs-container-separator svg {
    width: 100% !important; /* Set width explicitly to account for padding */
    height: 1px; /* Reduced from 2px to make thinner line */
    min-height: 1.5px !important;
    display: block; /* Ensure SVG behaves as a block element */
    overflow: visible; /* Allow potential animations to go outside bounds */
    transition: width 0.15s ease-in-out; /* Add transition for width */
    min-width: 0; /* Allow shrinking below intrinsic size */
    margin-right: 0; /* Reduced from 8px to decrease space between line and buttons */
    
  }
  
  /* Shrink SVG width on separator hover */
  .vertical-pinned-tabs-container-separator:hover svg {
     width: calc(100% - 100px) !important; 
  }
  
  /* Update SVG line selectors to path */
  .vertical-pinned-tabs-container-separator svg path {
    stroke: light-dark(rgba(1, 1, 1, 0.13), rgba(255, 255, 255, 0.2)) !important; /* Line color */
    stroke-width: 1px !important; /* Reduced from 1.5px to make thinner line */
    vector-effect: non-scaling-stroke; /* Keep stroke width consistent on scaling */
    fill: none; /* Ensure path isn't filled */
    transition: stroke 0.15s ease-in-out; /* Add transition for color */
    
  }
  
  /* Optional: Change path color slightly on hover */
  .vertical-pinned-tabs-container-separator:hover svg path {
      stroke: light-dark(rgba(1, 1, 1, 0.3), rgba(255, 255, 255, 0.4));
  }
  
  /* --- End SVG Path Animation --- */
  
  /* Sort & Clear Button Styling & Animation */
  .vertical-pinned-tabs-container-separator #sort-button,
  .vertical-pinned-tabs-container-separator #clear-button {
      /* Inherits font-size, color from tab_sort.uc.js */
      flex-shrink: 0; /* Prevent button from shrinking */
      min-width: 0; /* Ensure it can shrink to zero */
      max-width: 0; /* Use max-width to control hidden state */
      opacity: 0; /* Start fully transparent */
      overflow: hidden; /* Hide content when width is 0 */
      pointer-events: none; /* Not interactive initially */
      transition: max-width 0.15s ease-in-out, opacity 0.1s ease-in-out 0.05s; /* Transition max-width */
      margin: 0 !important; /* Override any potential margins */
      padding: 0 !important; /* Force zero padding initially */
      white-space: nowrap; /* Prevent label wrapping */
      border-radius: 4px; /* Match hover state */
  }
  
  .vertical-pinned-tabs-container-separator:hover #sort-button,
  .vertical-pinned-tabs-container-separator:hover #clear-button {
      max-width: 45px !important; /* Reduced from 55px to make buttons smaller */
      opacity: 1; /* Fade in */
      pointer-events: auto; /* Become interactive */
      padding: 1px !important; /* Restore original padding */
      margin-left: 2px !important; /* Reduced from 4px to decrease space between buttons */
      cursor: pointer !important;
  }
  
  /* Hide the line if the separator is meant to be hidden (e.g., no sortable tabs) */
  #vertical-pinned-tabs-container .zen-workspace-tabs-section[hide-separator] .vertical-pinned-tabs-container-separator,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs {
      max-height: 0 !important;
      margin: 0 auto !important;
      padding: 0 !important; /* Remove padding when hidden */
      border: none !important; /* Ensure no border shows up */
      overflow: hidden !important; /* Hide content when container is hidden */
      gap: 0 !important; /* Remove gap when hidden */
  }
  
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs svg,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #sort-button,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #clear-button {
      display: none !important; /* Specifically hide the SVG and buttons */
      width: 0 !important;
      opacity: 0 !important;
  }
  /* === END SVG Separator Line === */
  
  /* Button icons styling */
  #sort-button, #clear-button {
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      font-size: 11px !important; /* Reduced font size */
  }
  
  #sort-button .broom-icon {
      width: 12px !important; /* Reduced from 14px */
      height: 12px !important; /* Reduced from 14px */
      margin-right: 2px !important; /* Reduced from 4px */
      fill: currentColor !important;
    filter: brightness(88888%) !important;
    color: var(--toolbox-textcolor) !important;
  }
  
  #clear-button .arrow-icon {
      width: 12px !important; /* Reduced from 14px */
      height: 12px !important; /* Reduced from 14px */
      margin-right: 2px !important; /* Reduced from 4px */
      stroke: currentColor !important;
    
    filter: invert(0) brightness(1000) !important;
    color: var(--toolbox-textcolor) !important;
  }
  
  #sort-button .toolbarbutton-text,
  #clear-button .toolbarbutton-text {
    color: var(--toolbox-textcolor) !important;
      margin-left: 1px !important; /* Reduced from 2px */
  }
  
  /* Broom brushing animation - updated */
  @keyframes brush-sweep {
    0% { transform: rotate(0deg); }
    20% { transform: rotate(-15deg); }
    40% { transform: rotate(15deg); }
    60% { transform: rotate(-15deg); }
    80% { transform: rotate(15deg); }  
    100% { transform: rotate(0deg); }
  }
  
  #sort-button.brushing .broom-icon {
    animation: brush-sweep 0.8s ease-in-out;
    transform-origin: 50% 50%; /* Center of broom */
  }
  
  /* Arrow pulse animation */
  @keyframes arrow-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
  }
  
  #clear-button.clearing .arrow-icon {
    animation: arrow-pulse 0.6s ease-in-out;
  }
  
  #sort-button.hidden-button, #clear-button.hidden-button {
      display: none !important;
      pointer-events: none !important;
      opacity: 0 !important;
      max-width: 0 !important;
      margin: 0 !important;
      padding: 0 !important;
  }
  
  /* Shrink SVG width on separator hover when no buttons are visible */
  .vertical-pinned-tabs-container-separator:hover svg {
     /* Calculate width relative to the base width */
     width: calc(100% - 
       (100px * 
         (1 - 
           (var(--sort-button-hidden, 0) * var(--clear-button-hidden, 0))
         )
       )
     ) !important; 
  }
  
  /* Hide the buttons entirely when they're hidden */
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #sort-button,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #clear-button {
      display: none !important; /* Specifically hide the buttons */
      width: 0 !important;
      opacity: 0 !important;
  }
  
  /* The separator is always visible, even if buttons are hidden */
  .vertical-pinned-tabs-container-separator {
      display: flex !important;
      flex-direction: row !important;
      align-items: center !important;
    width: 93% !important;
    margin-left: 6.5px !important;
      justify-content: flex-end !important;
  }





